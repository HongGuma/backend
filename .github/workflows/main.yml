name: mini project team1 server CI/CD

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  S3_BUCKET_NAME: miniproject-team1-deploy

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        
# application.properties 파일 생성
    - name: Make application.properties
      run: |
        cd ./src/main/resources
        touch ./application.properties
          
        echo "${{ secrets.APPLICATION_PROPERTIES }}" >> ./application.properties
      shell: bash

# gradlew 파일 실행권한 설정
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
# Gradle build 
    - name: Build with Gradle
      run: ./gradlew clean build
      
# AWS에서 사용할 properties 생성
#     - name: Make application-aws.properties
#       if: contains(github.ref, 'master')
#       run: |
#           cd ./src/main/resources
#           rm ./application.properties
          
#           ls -al
#           touch ./application.properties
          
#           echo "copy properties"
#           echo "${{ secrets.APPLICATION_PROPERTIES }}" >> ./application-aws.properties
#       shell: bash
      
#디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy

    - name: Copy appspec.yml to deploy
      run: cp appspec.yml ./deploy

    - name: Copy deploy.sh to deploy
      run: cp deploy.sh ./deploy

# Jar파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy
# 파일 압축
    - name: Make zip file
      run: zip -r ./team1_backend_server.zip ./deploy
      shell: bash

# AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRT_KEY_ID }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./team1_backend_server.zip s3://$S3_BUCKET_NAME/

# Deploy 
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRT_KEY_ID }}
      run:
        aws deploy create-deployment
        --application-name KDT_mini_project_team1_server
        --deployment-group-name team1-group
        --file-exists-behavior OVERWRITE
        --s3-location bucket=miniproject-team1-deploy,bundleType=zip,key=team1_backend_server.zip
        --region ap-northeast-2
